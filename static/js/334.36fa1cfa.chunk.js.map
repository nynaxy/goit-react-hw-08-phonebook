{"version":3,"file":"static/js/334.36fa1cfa.chunk.js","mappings":"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","sources":["redux/selectors/contacts.js","redux/selectors/index.js","redux/selectors/filter.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from './contacts.js';\nimport { selectFilter } from './filter.js';\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","export const selectFilter = state => state.filter.status;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"row\":\"ContactForm_row__N6rAe\",\"label\":\"ContactForm_label__-cVXI\",\"formField\":\"ContactForm_formField__O5fo+\",\"input\":\"ContactForm_input__Bl93P ContactForm_formField__O5fo+\",\"submit\":\"ContactForm_submit__eYq7N ContactForm_formField__O5fo+\"};","import { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors/contacts';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/operations/contacts';\nimport { nanoid } from '@reduxjs/toolkit';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n    const name = form[0].value;\n    const number = form[1].value;\n    const nameExists = contacts.some(contact => contact.name === name);\n\n    if (nameExists) {\n      alert(name + ' is already in contacts.');\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.row}>\n        <label className={css.label} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          pattern=\"^[a-zA-ZąĄćĆęĘłŁńŃóÓśŚźŹżŻ]+((['\\s\\-][a-zA-ZąĄćĆęĘłŁńŃóÓśŚźŹżŻ ])?[a-zA-ZąĄćĆęĘłŁńŃóÓśŚźŹżŻ]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={css.row}>\n        <label className={css.label} htmlFor={numberInputId}>\n          Number\n        </label>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          pattern=\"^\\+((?:9[679]|8[035789]|6[789]|5[90]|42|3[578]|2[1-689])|9[0-58]|8[1246]|6[0-6]|5[1-8]|4[013-9]|3[0-469]|2[70]|7|1)(?:\\W*\\d){0,13}\\d$\"\n          title=\"Phone number must start with +, be at least 3 digits and can contain spaces, dashes\"\n          required\n        />\n      </div>\n      <button className={css.submit} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"row\":\"Filter_row__10vmb\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/slices/filterSlice';\nimport { nanoid } from '@reduxjs/toolkit';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filterInputId = nanoid();\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => {\n    const filter = evt.target.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div className={css.filter}>\n      <div className={css.row}>\n        <label htmlFor={filterInputId} className={css.label}>\n          Find contacts by name\n        </label>\n        <input\n          className={css.input}\n          onChange={handleFilter}\n          type=\"text\"\n          name=\"filter\"\n          id={filterInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+((['\\s\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </div>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"itemContainer\":\"Contact_itemContainer__ydaqD\",\"text\":\"Contact_text__Wq-3f\",\"paragraph\":\"Contact_paragraph__gC7bF\",\"button\":\"Contact_button__F+kJb\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/operations/contacts';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <div className={css.itemContainer}>\n      <div className={css.text}>\n        <p className={css.paragraph}>{contact.name}</p>\n        <p className={css.paragraph}>{contact.number}</p>\n      </div>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => handleDelete()}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listItem\":\"ContactList_listItem__SptUx\",\"error\":\"ContactList_error__uCB2f\"};","import { useSelector } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { selectVisibleContacts } from '../../redux/selectors';\nimport { Contact } from '../Contact/Contact';\nimport css from './ContactList.module.css';\n\nexport const ContactList = ({ error }) => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      {error && (\n        <p className={css.error}>Failed to fetch data from the server</p>\n      )}\n      <ul className={css.list}>\n        {visibleContacts.map(contact => (\n          <li className={css.listItem} key={contact.id}>\n            <Contact contact={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  error: PropTypes.string,\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\",\"smallContainer\":\"Contacts_smallContainer__F-PsM\",\"secondHeading\":\"Contacts_secondHeading__Px0xm\",\"thirdHeading\":\"Contacts_thirdHeading__aEDRw\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { selectIsLoading, selectError } from '../../redux/selectors/index';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { fetchContacts } from '../../redux/operations/contacts';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main className={css.container}>\n      <Helmet>\n        <title>Contacts</title>\n        <meta\n          name=\"description\"\n          content=\"Welcome to the contacts page of the online phonebook. Save and manage names and phone numbers.\"\n        />\n        <meta\n          name=\"keywords\"\n          content=\"contact, contacts, phonebook, phonenumber\"\n        />\n      </Helmet>\n      {isLoading && !error && <Loader />}\n      <div className={css.smallContainer}>\n        <h2 className={css.secondHeading}>Phonebook</h2>\n        <ContactForm />\n      </div>\n      <div className={css.smallContainer}>\n        <h3 className={css.thirdHeading}>Contacts</h3>\n        <Filter />\n      </div>\n      <ContactList error={error} />\n    </main>\n  );\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","status","contact","name","toLowerCase","includes","ContactForm","nameInputId","nanoid","numberInputId","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","evt","preventDefault","form","currentTarget","value","number","some","alert","addContact","reset","children","_jsx","htmlFor","type","id","pattern","title","required","Filter","filterInputId","onChange","target","setFilter","Contact","_ref","onClick","deleteContact","ContactList","visibleContacts","map","useEffect","fetchContacts","Helmet","content","Loader"],"sourceRoot":""}